using System;

public class TIL240219
{
    // 0219 -> URP, FSM, 시네머신

    /*
        What's URP?
        URP(Universal Render Pipeline)는 Unity에서 제공하는 신속하고 유연한 렌더링 솔루션 중 하나
        기본 렌더 파이프라인과 비교하여 개선된 그래픽 기술을 제공
        다양한 플랫폼에서 사용할 수 있도록 최적화
        다양한 디바이스와 플랫폼에서 좋은 성능과 품질을 제공

        쉐이더 그래픽스
        URP는 최신의 그래픽 기술을 지원하여 보다 현실적이고 아름다운 시각 효과를 제공
        그래픽스 기능 중 일부는 PBR(Materials), 렌더링 효과(그림자, 반사, 광택 등), 쉐이더 그래픽스, 
        post-processing 효과 등이 포함

        최적화와 성능
        RP는 다양한 디바이스와 플랫폼에서 좋은 성능을 제공하기 위해 최적화되어 있습니다. 
        모바일 장치부터 고성능 PC까지 다양한 환경에서 효율적으로 작동하도록 설계되었습니다.

        확장성
        RP는 사용자 정의 쉐이더 및 그래픽스 파이프라인을 통해 개발자들이 필요에 맞게 렌더링을 수정하고 확장할 수 있도록 합니다
        이는 다양한 프로젝트에 맞게 그래픽 처리를 최적화하고 사용자 지정하는 데 도움이 됩니다.

        가벼운 렌더링 솔루션
        URP는 기본적으로 가벼운 렌더링 솔루션을 제공
        는 게임을 보다 빠르게 개발하고 빌드할 수 있으며, 프로토타이핑 및 빠른 반복 작업에 특히 유용합니다.
    */



    /*
        What's FSM?

        FSM은 여러 상태(State)로 구성되어 있으며, 각 상태는 특정한 동작 또는 행동을 나타냅니다. 
        시스템은 현재 상태에서 특정 이벤트가 발생하면 다른 상태로 전이할 수 있습니다. 
        이러한 상태 전이는 사전에 정의된 규칙에 따라 이루어지며, 이 규칙은 상태 전이 테이블이라고도 합니다.


        FSM의 주요 구성 요소
        상태(State): 시스템이 취할 수 있는 다양한 상태들을 나타냅니다. 예를 들어, 게임 캐릭터의 상태는 "이동 중", "공격 중", "대기 중" 등이 될 수 있습니다.

        이벤트(Event): 상태 전이를 일으키는 동작 또는 조건을 나타냅니다. 이벤트는 주로 외부 입력 또는 내부 조건에 의해 발생합니다. 
        예를 들어, "공격 버튼을 눌렀을 때"와 같은 외부 입력은 "공격 이벤트"로 모델링될 수 있습니다.

        전이(Transition): 상태 간의 전이를 나타냅니다. 특정 상태에서 특정 이벤트가 발생하면 다른 상태로 전이됩니다. 이는 상태 전이 테이블에 의해 정의됩니다.

        동작(Action): 상태 전이가 발생할 때 수행되는 동작을 나타냅니다. 예를 들어, 상태가 변경되면 특정 애니메이션을 재생하거나 사운드를 재생할 수 있습니다.

        FSM은 게임 개발에서 주로 사용되며, 캐릭터의 AI, 게임의 상태 관리, NPC의 행동 패턴, UI 상태 관리 등 다양한 영역에서 활용
        FSM을 사용하면 시스템의 상태와 동작을 명확하게 정의하고, 유지보수가 쉽고 확장성이 뛰어난 코드를 작성할 수 있습니다
     */



    /*  시네머신(Cinemachine)     // 참고 영상 : https://www.youtube.com/watch?v=2oOIp22Y11U&t=4172 (UnityKorea 시네머신 파헤치기)
     
        Property : 카메라의 우선도.

        Save During Play : 유니티상에서 플레이 중에 변경한 시네머신 설정을 저장한다.

        Follow : 어떤 오브젝트를 따라다닐지 설정한다.

        Look At : 어떤 오브젝트를 바라볼지 설정한다.

        Standby Update : Live 상태가 아닌 카메라의 업데이트 빈도 설정.
            (Never - 항상 / Always - Live일때만 / Round Robine - 정기적으로)

        Lens : 카메라 렌즈를 설정.

        Transitions : 카메라 사이를 이동할 때 씬 전환 효과 설정.

        Body : 씬 내부의 버추얼 카메라가 움직일 때 따라가는 알고리즘 설정을 변경한다.
        {
            Do Nothing: 가상 카메라를 움직이지 않습니다.
            3rd Person Follow : 카메라가 플레이어나 다른 대상을 따라가면서 이동하는 방식
            Framing Transposer: Follow 타겟과 고정된 스크린 공간 관계로 움직입니다.
            Hard Lock to Target: Follow 타겟과 동일한 포지션을 사용합니다.
            Orbital Transposer: Follow 타겟과 가변 관계로 움직이며, 선택적으로 플레이어 입력을 허용합니다.
            Tracked Dolly: 사전 정의된 경로를 따라 움직입니다.
            Transposer: Follow 타겟과 고정된 관계로 움직입니다.
        }

        Aim : 씬 내부의 버추얼 카메라가 Look At 타깃을 바라볼 때의 따라가는 알고리즘 설정을 변경한다
        {
            Do Nothing : 아무런 동작도 하지 않도록 설정
            Composer : Composer를 사용하여 카메라의 위치를 결정
                Composer의 구성요소 
                    {
                        Dead Zone, Soft Zone, Look Ahead Time, Damping 
                    }
            Group Composer : 여러 개의 카메라를 그룹으로 지정하여 이 그룹의 모든 카메라가 동일한 Composer를 사용하여 움직이도록 설정
            Hard Look At : Look At 대상을 강제로 바라보도록 설정
            POV (Point of View) : 카메라를 일정한 시점에서 주어진 대상을 바라보도록 설정
            Same As Follow Target : 카메라가 Follow Target을 따라가는 동작을 대상으로 반영하도록 설정합니다. 즉, 대상이 움직이면 카메라도 동일한 속도와 방향으로 움직임
        }
     
        Noise : 카메라에 진동 이펙트를 준다.
     */
}
